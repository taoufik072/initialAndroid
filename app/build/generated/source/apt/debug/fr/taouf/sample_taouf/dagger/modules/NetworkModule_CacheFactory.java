// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package fr.taouf.sample_taouf.dagger.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.io.File;
import javax.inject.Provider;
import okhttp3.Cache;

public final class NetworkModule_CacheFactory implements Factory<Cache> {
  private final NetworkModule module;

  private final Provider<File> fileCacheProvider;

  public NetworkModule_CacheFactory(NetworkModule module, Provider<File> fileCacheProvider) {
    assert module != null;
    this.module = module;
    assert fileCacheProvider != null;
    this.fileCacheProvider = fileCacheProvider;
  }

  @Override
  public Cache get() {
    return Preconditions.checkNotNull(
        module.cache(fileCacheProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Cache> create(NetworkModule module, Provider<File> fileCacheProvider) {
    return new NetworkModule_CacheFactory(module, fileCacheProvider);
  }
}
